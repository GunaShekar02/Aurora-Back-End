name: Deploy on staging server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          ref: dev
          fetch-depth: 1

      - name: Setup .env file
        env:
          STAGING_ENV: ${{ secrets.STAGING_ENV }}
        run: |
          echo "$STAGING_ENV" | base64 -d > .envbak

      - name: Setup JWT keys
        env:
          JWT_PRIVATE: ${{ secrets.JWT_PRIVATE }}
          JWT_PUBLIC: ${{ secrets.JWT_PUBLIC }}
        run: |
          mkdir keys
          echo "$JWT_PRIVATE" | base64 -d > keys/ecd.pem
          echo "$JWT_PUBLIC" | base64 -d > keys/ecd.pub.pem

      - name: Setup key
        env:
          ECD_KEY: ${{ secrets.ECD_KEY }}
        run: |
          echo "$ECD_KEY" | base64 -d > $HOME/ecd
          chmod 400 $HOME/ecd

      - name: Push the build to server
        run: rsync -avz --exclude 'node_modules' --exclude '.git*' --delete -e "ssh -i $HOME/ecd -o StrictHostKeyChecking=no" ./ ops@staging.aurorafest.org:/var/www/aurora-staging-backend/

      - name: install dependencies on remote server
        run: ssh -i $HOME/ecd -o StrictHostKeyChecking=no ops@staging.aurorafest.org 'cd /var/www/aurora-staging-backend/ && yarn install --prod && cp /home/ops/stgenv ./.env && pm2 restart aurora-staging-backend'